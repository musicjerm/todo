# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app_name: '%env(APP_NAME)%'
    app_short_name: '%env(APP_SHORT_NAME)%'
    app_author: 'Jeremy Antunez'
    app_version: '4.0'
    email_from: '%env(EMAIL_FROM)%'
    name_from: '%env(NAME_FROM)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #listeners
    App\EventListener\SecurityListener:
        arguments: ['@doctrine.orm.entity_manager', '@request_stack', '@security.authorization_checker']
        tags:
        - { name: kernel.event_listener, event: security.authentication.failure, method: onAuthenticationFailure }
        - { name: kernel.event_listener, event: security.interactive_login, method: onAuthenticationSuccess }

    App\EventListener\CRUDListener:
        arguments: ['@doctrine.orm.entity_manager', '@security.token_storage']
        tags:
            - { name: kernel.event_listener, event: jermbundle.crud_create, method: onCrudCreate }
            - { name: kernel.event_listener, event: jermbundle.crud_update, method: onCrudUpdate }
            - { name: kernel.event_listener, event: jermbundle.crud_delete, method: onCrudDelete }

    App\EventListener\ImporterListener:
        arguments: ['@doctrine.orm.entity_manager', '@security.token_storage']
        tags:
            - { name: kernel.event_listener, event: jermbundle.importer_import, method: onImport }