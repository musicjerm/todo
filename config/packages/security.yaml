security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User: bcrypt

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    providers:
        #in_memory:
        #    memory:
        #        users:
        #            admin: { password: tacos, roles: ROLE_ADMIN }
        #            user: { password: burrito, roles: ROLE_USER }
        db_users:
            entity:
                class: App:User

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            logout_on_user_change: true
            security: true
            anonymous: true
            provider: db_users
            form_login:
                login_path: /login
                check_path: /login_check
                default_target_path: /
                csrf_token_generator: security.csrf.token_manager

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

            logout:
                path: /logout
                target: /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/di, roles: ROLE_USER }
        - { path: ^/profile, roles: ROLE_USER }